use miette::Result;

use nidhogg::{types::*, NaoControlMessage};

fn main() -> Result<()> {
    let cool_float = 1337.0;
    let cool_bool = false;
    let cool_color = Color::<f32>::GRAY;

    let _build = JointArray::<f32>::builder().leg_joints(LegJoints::default());

    let _msg = NaoControlMessage::builder()
        .position(
            JointArray::builder()
                .head_joints(
                    HeadJoints::builder()
                        .pitch(cool_float)
                        .yaw(cool_float)
                        .build(),
                )
                .left_arm_joints(
                    LeftArmJoints::builder()
                        .shoulder_pitch(cool_float)
                        .shoulder_roll(cool_float)
                        .elbow_yaw(cool_float)
                        .elbow_roll(cool_float)
                        .wrist_yaw(cool_float)
                        .hand(cool_float)
                        .build(),
                )
                .right_arm_joints(
                    RightArmJoints::builder()
                        .shoulder_pitch(cool_float)
                        .shoulder_roll(cool_float)
                        .elbow_yaw(cool_float)
                        .elbow_roll(cool_float)
                        .wrist_yaw(cool_float)
                        .hand(cool_float)
                        .build(),
                )
                .left_leg_joints(
                    LeftLegJoints::builder()
                        .hip_yaw_pitch(cool_float)
                        .hip_roll(cool_float)
                        .hip_pitch(cool_float)
                        .knee_pitch(cool_float)
                        .ankle_pitch(cool_float)
                        .ankle_roll(cool_float)
                        .build(),
                )
                .right_leg_joints(
                    RightLegJoints::builder()
                        .hip_roll(cool_float)
                        .hip_pitch(cool_float)
                        .knee_pitch(cool_float)
                        .ankle_pitch(cool_float)
                        .ankle_roll(cool_float)
                        .build(),
                )
                .build(),
        )
        .stiffness(
            JointArray::builder()
                .head_yaw(cool_float)
                .head_pitch(cool_float)
                .left_shoulder_pitch(cool_float)
                .left_shoulder_roll(cool_float)
                .left_elbow_yaw(cool_float)
                .left_elbow_roll(cool_float)
                .left_wrist_yaw(cool_float)
                .left_hip_yaw_pitch(cool_float)
                .left_hip_roll(cool_float)
                .left_hip_pitch(cool_float)
                .left_knee_pitch(cool_float)
                .left_ankle_pitch(cool_float)
                .left_ankle_roll(cool_float)
                .right_hip_roll(cool_float)
                .right_hip_pitch(cool_float)
                .right_knee_pitch(cool_float)
                .right_ankle_pitch(cool_float)
                .right_ankle_roll(cool_float)
                .right_shoulder_pitch(cool_float)
                .right_shoulder_roll(cool_float)
                .right_elbow_yaw(cool_float)
                .right_elbow_roll(cool_float)
                .right_wrist_yaw(cool_float)
                .left_hand(cool_float)
                .right_hand(cool_float)
                .build(),
        )
        .sonar(
            SonarEnabled::builder()
                .left(cool_bool)
                .right(cool_bool)
                .build(),
        )
        .left_ear(
            LeftEar::builder()
                .l9(cool_float)
                .l8(cool_float)
                .l7(cool_float)
                .l6(cool_float)
                .l5(cool_float)
                .l4(cool_float)
                .l3(cool_float)
                .l3(cool_float)
                .l2(cool_float)
                .l1(cool_float)
                .build(),
        )
        .right_ear(
            RightEar::builder()
                .r0(cool_float)
                .r1(cool_float)
                .r2(cool_float)
                .r3(cool_float)
                .r4(cool_float)
                .r5(cool_float)
                .r6(cool_float)
                .r7(cool_float)
                .r8(cool_float)
                .r9(cool_float)
                .build(),
        )
        .chest(cool_color)
        .left_eye(
            LeftEye::builder()
                .l0(cool_color)
                .l7(cool_color)
                .l6(cool_color)
                .l5(cool_color)
                .l4(cool_color)
                .l3(cool_color)
                .l2(cool_color)
                .l1(cool_color)
                .build(),
        )
        .right_eye(
            RightEye::builder()
                .r0(cool_color)
                .r1(cool_color)
                .r2(cool_color)
                .r3(cool_color)
                .r4(cool_color)
                .r5(cool_color)
                .r6(cool_color)
                .r7(cool_color)
                .build(),
        )
        .left_foot(cool_color)
        .right_foot(cool_color)
        .skull(
            Skull::builder()
                .left_front_0(cool_float)
                .left_front_1(cool_float)
                .left_middle_0(cool_float)
                .left_rear_0(cool_float)
                .left_rear_1(cool_float)
                .left_rear_2(cool_float)
                .right_front_0(cool_float)
                .right_front_1(cool_float)
                .right_middle_0(cool_float)
                .right_rear_0(cool_float)
                .right_rear_1(cool_float)
                .right_rear_2(cool_float)
                .build(),
        )
        .build();

    Ok(())
}
